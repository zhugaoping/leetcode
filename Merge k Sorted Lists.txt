/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *mergeKLists(vector<ListNode *> &lists) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        multimap<int, ListNode*> front;
        for (int i = 0; i < lists.size(); i++) {
            if (lists[i] != NULL)
                front.insert(make_pair<int, ListNode*>(lists[i]->val, lists[i]));
        }
        ListNode* head = new ListNode(0);
        ListNode* tail = head;
        while (front.size() > 0) {
            ListNode* pops = front.begin()->second;
            front.erase(front.begin());
            tail->next = pops;
            ListNode* node = pops->next;
            if (node != NULL)
                front.insert(make_pair<int, ListNode*>(node->val, node));
            pops->next = NULL;
            tail = pops;
        }
        ListNode* temp = head;
        head = head->next;
        delete temp;
        return head;
    }
};