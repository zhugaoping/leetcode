/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *mergeKLists(vector<ListNode *> &lists) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        multimap<int, ListNode*> front;
        for (size_t i = 0; i < lists.size(); i++)
            if (lists[i])
                front.insert(make_pair(lists[i]->val, lists[i]));
        ListNode *head = new ListNode(0), *tail = head;
        while (!front.empty()) {
            multimap<int, ListNode*>::iterator it = front.begin();
            tail->next = it->second;
            tail = tail->next;
            front.erase(it);
            if (tail->next)
                front.insert(make_pair(tail->next->val, tail->next));
        }
        tail = head->next;
        delete head;
        return tail;
        
    }
};