class Solution {
public:
    int numDistinct(string S, string T) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int sizes = S.size(), sizet = T.size();
        if (sizes == 0)
            return 0;
        int plan[sizet][sizes];
        for (int i = 0; i <= sizes; i++)
            plan[0][i] = (i==0)?(T[0] == S[0]):(plan[0][i-1] + (T[0] == S[i]));
        for (int i = 1; i < sizet; i++) {
            plan[i][i-1] = 0;
            for (int j = i; j < sizes; j++)
                plan[i][j] = (T[i] == S[j])?(plan[i-1][j-1] + plan[i][j-1]):plan[i][j-1];
        }
        return plan[sizet-1][sizes-1];
    }
};