class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int> > &obstacleGrid) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        vector<vector<int> >& g = obstacleGrid;
         if (( g.size() == 0) || (g[0].size() == 0))
            return 0;
        int m = g.size();
        int n = g[0].size();
        int mat[m][n];
        int i = 0;
        for (; i < m; i++) {
            if (g[i][0])
                break;
            mat[i][0] = 1;
        }
        for (; i < m; i++)
            mat[i][0] = 0;
        i = 0;
        for (; i < n; i++) {
            if (g[0][i])
                break;
            mat[0][i] = 1;
        }
        for (; i < n; i++)
            mat[0][i] = 0;
        for (int i = 1; i < m; i++) {
            for (int j = 1; j < n; j++) {
                if (g[i][j])
                    mat[i][j] = 0;
                else
                    mat[i][j] = mat[i-1][j] + mat[i][j-1];
            }
        }
        return mat[m-1][n-1];
        
    }
};