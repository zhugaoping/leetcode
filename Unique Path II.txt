class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int> > &obstacleGrid) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int nrows = obstacleGrid.size();
        if (!nrows)
            return 0;
        int ncols = obstacleGrid[0].size();
        if (!ncols)
            return 0;
        int path[nrows][ncols];
        for (int i = 0; i < nrows; i++)
            for (int j = 0; j < ncols; j++) {
                if (obstacleGrid[i][j] == 1)
                    path[i][j] = 0;
                else {
                    if (!i && !j)
                        path[i][j] = 1;
                    else
                        path[i][j] = (i?path[i-1][j]:0) + (j?path[i][j-1]:0);
                }
            }
        return path[nrows-1][ncols-1];
    }
};