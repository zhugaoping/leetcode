class Solution {
public:
    vector<vector<int> > combinationSum(vector<int> &candidates, int target) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        vector<vector<int> > rets;
        vector<int> ret;
        sort(candidates.begin(), candidates.end());
        solve(rets, ret, candidates, 0, target);
        return rets;
    }
    void solve(vector<vector<int> > &rs, vector<int> &r, vector<int> &c, int p, int t) {
        if (t == 0)
            rs.push_back(r);
        else if (p < c.size()){
            int round = t/c[p];
            for (int i = 0; i <= count; i++) {
                solve(rs, r, c, p + 1, t - i*c[p]);
                r.push_back(c[p]);
            }
            for (int i = 0; i <= count; i++)
                r.pop_back();
        }
    }
};