/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *rotateRight(ListNode *head, int k) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if (head == NULL)
            return head;
        ListNode* tail = head;
        int num = 1;
        while (tail->next != NULL) {
            num++;
            tail = tail->next;
        }
        int mov = k%num;
        if (mov == 0)
            return head;
        ListNode* root = new ListNode(0);
        ListNode* prev = head;
        int p = (num - mov) - 1;
        while (p--)
            prev = prev->next;
        root->next = prev->next;
        tail->next = head;
        prev->next = NULL;
        head = root->next;
        delete root;
        return head;
    }
};