/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *mergeTwoLists(ListNode *l1, ListNode *l2) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if (l1 == NULL)
            return l2;
        if (l2 == NULL)
            return l1;
        ListNode* h1 = l1;
        ListNode* h2 = l2;
        ListNode* head = new ListNode(0);
        ListNode* tail = head;
        while ((h1 != NULL) && (h2 != NULL)) {
            if (h1->val < h2->val) {
                tail->next = h1;
                tail = h1;
                h1 = h1->next;
                tail->next = NULL;
            }
            else {
                tail->next = h2;
                tail = h2;
                h2 = h2->next;
                tail->next = NULL;
            }
        }
        if (h1 != NULL)
            tail->next = h1;
        if (h2 != NULL)
            tail->next = h2;
        ListNode* temp = head;
        head = head->next;
        delete temp;
        return head;
    }
};