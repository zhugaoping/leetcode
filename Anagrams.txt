class Solution {
public:
    vector<string> anagrams(vector<string> &strs) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        vector<string> rets;
        unordered_map<string, vector<string>> maps;
        for (size_t i = 0; i < strs.size(); i++) {
            string r = strs[i];
            sort(r.begin(), r.end());
            maps[r].push_back(strs[i]);
        }
        unordered_map<string, vector<string>>::iterator it = maps.begin();
        while (it != maps.end()) {
            if (it->second.size() > 1)
                rets.insert(rets.end(), it->second.begin(), it->second.end());
            it++;
        }
        return rets;
    }
};