class Solution {
public:
    int longestValidParentheses(string s) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int size = s.size();
        if (size == 0)
            return 0;
        int max = 0;
        int start = size;
        vector<int> b;
        for (int i = 0; i < size; i++) {
            char c = s[i];
            if (c == '(')
                b.push_back(i);
            else {
                if (b.size() > 0) {
                    start = (start < b.back())?start:b.back();
                    b.pop_back();
                    if (b.size() > 0)
                        max = ((i - b.back())>max)?(i - b.back()):max;
                    else
                        max = ((i + 1 - start)>max)?(i + 1 - start):max;
                }
                else
                    start = size;
            }
        }
        return max;
    }
};