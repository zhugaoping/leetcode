/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *deleteDuplicates(ListNode *head) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if (head == NULL)
            return head;
        ListNode* root = new ListNode(0);
        ListNode* tail = root;
        while (head != NULL) {
            ListNode* temp = head->next;
            while ((temp != NULL) && (temp->val == head->val))
                temp = temp->next;
            if (temp == head->next) {
                tail->next = head;
                tail = tail->next;
                tail->next = NULL;
                head = temp;
            }
            while (head != temp) {
                ListNode* t = head;
                head = head->next;
                delete t;
            }
        }
        head = root->next;
        delete root;
        return head;    
    }
};