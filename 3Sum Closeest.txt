class Solution {
public:
    int threeSumClosest(vector<int> &num, int target) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int ret = -1;
        int size = num.size();
        if (size < 3)
            return ret;
        sort(num.begin(), num.end());
        for (int i = 0; i < size - 2; i++) {
            while ((i > 0) && (i < (size - 2)) && (num[i] == num[i-1]))
                i++;
            int l = i + 1, u = size - 1, sum = 0;
            while (l < u) {
                sum = num[i] + num[l] + num[u];
                if (ret == -1)
                    ret = sum;
                else
                    ret = (abs(sum - target) < abs(ret - target))?sum:ret;
                if (ret == target)
                    return ret;
                else if (sum > target) {
                    u--;
                    while ((l < u) && (num[u] == num[u+1]))
                        u--;
                }
                else {
                    l++;
                    while ((l < u) && (num[l] == num[l-1]))
                        l++;
                }
            }
        }
        return ret;
    }
};