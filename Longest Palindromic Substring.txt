class Solution {
public:
    string longestPalindrome(string s) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if (s.empty())
            return s;
        string copy = "#";
        for (size_t i = 0; i < s.size(); i++)
            copy = copy + s[i] + '#';
        vector<int> ra(copy.size(), 0);
        int c = 0, r = 0;
        for (int i = 1; i < copy.size(); i++) {
            int m = 2*c - i;
            ra[i] = (i >= r)?0:min(ra[m], r - i);
            while ((i+ra[i]+1 < copy.size()) && (i-ra[i]-1 >= 0) && (copy[i-ra[i]-1] == copy[i+ra[i]+1]))
                ra[i]++;
            if (i + ra[i] > r) {
                c = i;
                r = i + ra[i];
            }
        }
        string ret = "";
        for (int i = 0; i < copy.size(); i++)
            if (ra[i] > ret.size())
                ret = s.substr((i-ra[i])/2, ra[i]);
        return ret;
    }
};