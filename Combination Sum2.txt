class Solution {
public:
    vector<vector<int> > combinationSum2(vector<int> &num, int target) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        vector<vector<int>> rets;
        vector<int> ret;
        sort(num.begin(), num.end());
        solve(rets, ret, num, 0, target);
        return rets;
    }
    void solve(vector<vector<int>> &rs, vector<int> &r, vector<int> &n, int p, int t) {
        if (t == 0)
            rs.push_back(r);
        else if (p < n.size()) {
            int e = p, d = n[p];
            while ((++e < n.size()) && (n[e] == d));
            int round = min(e - p, t/d);
            for (int i = 0; i <= round; i++) {
                solve(rs, r, n, e, t - i*d);
                r.push_back(d);
            }
            for (int i = 0; i <= round; i++)
                r.pop_back();
        }
    }
};