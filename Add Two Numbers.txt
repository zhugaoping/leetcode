/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *addTwoNumbers(ListNode *l1, ListNode *l2) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if (!l1)
            return l2;
        if (!l2)
            return l1;
        ListNode* head = new ListNode(0), *tail = head;
        int sum = 0, car = 0;
        while (l1 && l2) {
            sum = l1->val + l2->val + car;
            ListNode* node = new ListNode(sum%10);
            car = sum/10;
            tail->next = node;
            tail = tail->next;
            l1 = l1->next;
            l2 = l2->next;
        }
        while (!l2 && l1) {
            sum = l1->val + car;
            ListNode* node = new ListNode(sum%10);
            car = sum/10;
            tail->next = node;
            tail = tail->next;
            l1 = l1->next;
        }
        while (!l1 && l2) {
            sum = l2->val + car;
            ListNode* node = new ListNode(sum%10);
            car = sum/10;
            tail->next = node;
            tail = tail->next;
            l2 = l2->next;
        }
        if (car > 0) {
            ListNode* node = new ListNode(car);
            tail->next = node;
            tail = tail->next;
        }
        ListNode* temp = head;
        head = head->next;
        delete temp;
        return head;
    }
};