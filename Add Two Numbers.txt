/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *addTwoNumbers(ListNode *l1, ListNode *l2) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if (l1 == NULL)
            return l2;
        if (l2 == NULL)
            return l1;
        ListNode* h = new ListNode(0);
        ListNode* t = h;
        int ca = 0;
        while (l1 && l2) {
            int sum = l1->val + l2->val + ca;
            ListNode* n = new ListNode(sum%10);
            ca = sum/10;
            t->next = n;
            t = n;
            l1 = l1->next;
            l2 = l2->next;
        }
        while (l1) {
            int sum = l1->val + ca;
            ListNode* n = new ListNode(sum%10);
            ca = sum/10;
            t->next = n;
            t = n;
            l1 = l1->next;
        }
        while (l2) {
            int sum = l2->val + ca;
            ListNode* n = new ListNode(sum%10);
            ca = sum/10;
            t->next = n;
            t = n;
            l2 = l2->next;
        }
        if (ca > 0) {
            ListNode* n = new ListNode(ca);
            t->next = n;
            t = n;
        }
        t = h;
        h = h->next;
        delete t;
        return h;
        
    }
};