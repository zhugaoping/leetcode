class Solution {
public:
    vector<vector<string> > solveNQueens(int n) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        vector<vector<string> > results;
        if (n == 0)
            return results;
        vector<int> r(n, 0);
        vector<int> u(n, 0);
        plan(results, r, u, 0);
    }
    void plan(vector<vector<string> >& results, vector<int>& r, vector<int>& u, int d) {
        if (d == r.size()) {
            vector<string> p;
            results.push_back(p);
            for (int i = 0; i < r.size(); i++) {
                string s(r.size(), '.');
                s[r[i]] = 'Q';
                results.back().push_back(s);
            }
        }
        else {
            for (int i = 0; i < r.size(); i++) {
                if (u[i] == 0) {
                    r[d] = i;
                    u[i] = 1; 
                    if (check(r, d))
                        plan(results, r, u, d+1);
                    u[i] = 0;
                }
            }
        }
    }
    bool check(vector<int>& r, int d) {
        for (int i = 0; i < d; i++) {
            if (abs(i - d) == abs(r[d] - r[i]))
                return false;
        }
        return true;
    }
};