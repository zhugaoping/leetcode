class Solution {
public:
    int maxProfit(vector<int> &prices) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if (prices.size() < 2)
            return 0;
        int size = prices.size();
        int l[size];
        int r[size];
        int minp = prices[0];
        l[0] = 0;
        for (int i = 1; i < size; i++) {
            l[i] = max((prices[i] - minp), l[i-1]);
            minp = min(prices[i], minp);
        }
        r[size-1] = 0;
        int maxp = prices[size-1];
        for (int i = size - 2; i >= 0; i--) {
            r[i] = max((maxp - prices[i]), r[i+1]);
            maxp = max(prices[i], maxp);    
        }
        int m = l[size - 1];
        for (int i = 0; i < size - 2; i++) {
            m = max(l[i]+r[i+1], m);
        }
        return m;
    }
};