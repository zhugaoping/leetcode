/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *reverseBetween(ListNode *head, int m, int n) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        ListNode* h = new ListNode(0);
        h->next = head;
        ListNode* p;
        ListNode* r;
        ListNode* q;
        ListNode* t;
        int i = 1;
        head = h;
        while (i < m) {
            head = head->next; 
            i++;
        }
        p = head;
        i--;
        while (i < n) {
            head = head->next;
            i++;
        }
        r = head;
        t = head->next;
        r->next = NULL;
        q = p->next;
        while (q != NULL) {
            p->next = q->next;
            q->next = t;
            t = q;
            q = p->next;
        }
        p->next = t;
        head = h->next;
        delete h;
        return head;
        
        
    }
};