/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *reverseBetween(ListNode *head, int m, int n) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        ListNode* root = new ListNode(0);
        root->next = head;
        ListNode* prev = root, *tail = root;
        while (m-- > 1) {prev = prev->next; tail = tail->next; n--;}
        while (n-- > -1) tail = tail->next;
        ListNode* mark = tail, *temp;
        while (prev->next != mark) {
            temp = prev->next;
            prev->next = temp->next;
            temp->next = tail;
            tail = temp;
        }
        prev->next = tail;
        head = root->next;
        delete root;
        return head;
    }
};