/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *reverseBetween(ListNode *head, int m, int n) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        ListNode* root = new ListNode(0);
        root->next = head;
        int num = n - m + 1;
        ListNode* prev = root;
        ListNode* tail = root;
        int move1 = n + 1;
        int move2 = m - 1;
        while (move1-- > 0)
            tail = tail->next;
        while (move2-- > 0)
            prev = prev->next;
        while (num-- > 0) {
            ListNode* temp = prev->next;
            prev->next = temp->next;
            temp->next = tail;
            tail = temp;
        }
        prev->next = tail;
        head = root->next;
        delete root;
        return head;
    }
};