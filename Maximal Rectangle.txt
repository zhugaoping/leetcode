class Solution {
public:
    int maximalRectangle(vector<vector<char> > &matrix) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int nrows = matrix.size();
        if (!nrows)
            return 0;
        int ncols = matrix[0].size();
        if (!ncols)
            return 0;
        int height[nrows][ncols];
        for (int i = 0; i < nrows; i++) {
            height[i][ncols-1] = (matrix[i][ncols-1] == '1')?1:0;
            for (int j = ncols - 2; j >= 0; j--)
                height[i][j] = (matrix[i][j] == '1')?height[i][j+1]+1:0;
        }
        int l[nrows], r[nrows], mav = 0;
        for (int j = 0; j < ncols; j++) {
            l[0] = 0, r[nrows-1] = nrows - 1;
            for (int i = 1; i < nrows; i++) {
                int k = i;
                while ((k > 0) && (height[i][j] <= height[k-1][j]))
                    k = l[k-1];
                l[i] = k;
            }
            for (int i = nrows - 2; i >= 0; i--) {
                int k = i;
                while ((k < nrows - 1) && (height[i][j] <= height[k+1][j]))
                    k = r[k+1];
                r[i] = k;
            }
            for (int i = 0; i < nrows; i++)
                mav = max(mav, height[i][j]*(r[i]-l[i]+1));
        }
        return mav;
    }
};