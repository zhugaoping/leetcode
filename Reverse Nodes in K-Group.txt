/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *reverseKGroup(ListNode *head, int k) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        ListNode* root = new ListNode(0);
        root->next = head;
        ListNode* prev = root;
        while (prev) {
            int p = k;
            ListNode* tail = prev;
            while (tail && p--)
                tail = tail->next;
            if (tail == NULL)
                break;
            ListNode* newp = prev->next;
            ListNode* next = tail->next;
            ListNode* temp = prev->next;
            tail->next = NULL;
            while (temp) {
                prev->next = temp->next;
                temp->next = next;
                next = temp;
                temp = prev->next;
            }
            prev->next = next;
            prev = newp;
        }
        head = root->next;
        delete root;
        return head;  
    }
};