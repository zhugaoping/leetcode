/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *reverseKGroup(ListNode *head, int k) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        ListNode* root = new ListNode(0), *prev = root, *tail = root;
        root->next = head;
        while (prev) {
            int kp = k + 1;
            while (kp && tail) {tail = tail->next; kp--;}
            if (kp > 0)
                break;
            ListNode* mark = tail, *temp, *newp = prev->next;
            while (prev->next != mark) {
                temp = prev->next;
                prev->next = temp->next;
                temp->next = tail;
                tail = temp;
            }
            prev->next = tail;
            prev = newp;
            tail = newp;
        }
        head = root->next;
        delete root;
        return head;
    }
};