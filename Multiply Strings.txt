class Solution {
public:
    string multiply(string num1, string num2) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if ((num1 == "0") || (num2 == "0"))
            return "0";
        if (num1 == "1")
            return num2;
        if (num2 == "1")
            return num1;
        int size1=num1.size();
        int size2=num2.size();
        vector<int> n1, n2;
        for (int i = size1 - 1; i >= 0; i--)
            n1.push_back(num1[i] - '0');
        for (int i = size2 - 1; i >= 0; i--)
            n2.push_back(num2[i] - '0');
        vector<int> result(size1 + size2 + 2, 0);
        for (int j = 0; j < n2.size(); j++) {
            vector<int> current(j, 0);
            int car = 0;
            for (int i = 0; i < n1.size(); i++) {
                int mul = n1[i]*n2[j] + car;
                current.push_back(mul%10);
                car = mul/10;
            }
            if (car > 0)
                current.push_back(car);
            add(result, current);
        }
        while ((result.size() > 0) && (result.back() == 0))
            result.pop_back();
        string r = "";
        for (int i = result.size() - 1; i >= 0; i--)
            r+= (char)('0' + result[i]);
        return r;
    }
    void add(vector<int>& r, vector<int>& c) {
        int car = 0;
        int i = 0;
        for (; i < c.size(); i++) {
            int add = r[i] + c[i] + car;
            r[i] = add%10;
            car = add/10;
        }
        for (; i < r.size(); i++) {
            int add = r[i] + car;
            r[i] = add%10;
            car = add/10;
            if (!car)
                break;
        }
    }
};