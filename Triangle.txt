class Solution {
public:
    int minimumTotal(vector<vector<int> > &triangle) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if (triangle.empty())
            return 0;
        vector<int> inner(triangle.size(), 0), outer(triangle.size(), 0);
        for (int i = 0; i < triangle.size(); i++) {
            vector<int> &t = triangle[i];
            for (int j = 0; j <= i; j++) {
                if (j == 0)
                    outer[j] = inner[j] + t[j];
                else if (j == i)
                    outer[j] = inner[j-1] + t[j];
                else
                    outer[j] = t[j] + min(inner[j-1], inner[j]);
            }
            inner = outer;
        }
        int miv = INT_MAX;
        for (int i = 0; i < triangle.size(); i++)
            miv = min(miv, inner[i]);
        return miv;
    }
};