class Solution {
public:
    string simplifyPath(string path) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int size = path.size();
        if (size == 0)
            return "";
        vector<string> b;
        int i = 1;
        while ((i < size) && (path[i] == '/'))
            i++;
        while (i < size) {
            if (path[i] != '.') {
                int t = i;
                while ((i < size) && (path[i] != '/'))
                    i++;
                b.push_back(path.substr(t, i - t));
            }
            else if ((i + 1 < size) && (path[i+1] == '.')) {
                if (b.size() > 0)
                    b.pop_back();
                i = i+2;
            }
            else
                i = i+1;
            while ((i < size) && (path[i] == '/'))
                i++;
        }
        if (b.size() == 0)
            return "/";
        else {
            string r;
            for (int i = 0; i < b.size(); i++)
                r += "/" + b[i];
            return r;
        }
        
    }
};