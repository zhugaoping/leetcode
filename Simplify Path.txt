class Solution {
public:
    string simplifyPath(string path) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        vector<string> b;
        int s = path.size();
        int p = 0;
        while ((p < s) && (path[p] == '/'))
            p++;
        while (p < s) {
            if ((path[p] == '.') && (p+1 < s) && (path[p+1] == '.')) {
                if (b.size() > 0)
                    b.pop_back();
                p += 2;
            }
            else if ((path[p] == '.') && ((p+1 == s) || (path[p+1] == '/')))
                p += 1;
            else {
                b.push_back("");
                while ((p < s) && (path[p] != '/'))
                    b.back() += path[p++];
            }
            while ((p < s) && (path[p] == '/' ))
                p++;
        }
        if (b.size() == 0)
            return "/";
        string r;
        for (int i = 0; i < b.size(); i++) {
            r += '/' + b[i];
        }
        return r;
    }
};