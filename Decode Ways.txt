class Solution {
public:
    int numDecodings(string s) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if (s.size() == 0)
            return 0;
        if ((s.size() == 1) && getOne(s, 0))
            return 1;
        int size = s.size();
        int plan[size];
        memset(plan, 0x00, sizeof(int)*size);
        if (getOne(s, 0))
            plan[0]++;
        if (getTwo(s, 0))
            plan[1]++;
        if (getOne(s, 0) && getOne(s, 1))
            plan[1]++;
        for (int i = 2; i < size; i++) {
            int result = 0;
            if ((plan[i-1] > 0) && getOne(s, i))
                result += plan[i-1];
            if ((plan[i-2] > 0) && getTwo(s, i-1))
                result += plan[i-2];
            plan[i] = result;
            
        }
        return plan[size-1];
        
    }
    bool getOne(string& str, int s) {
        if (str[s] != '0')
            return true;
        else
            return false;
    }
    bool getTwo(string& str, int s) {
        if (str[s] == '1')
            return true;
        else if (str[s] == '2') {
            if ((str[s+1] >= '0') && (str[s+1] <= '6'))
                return true;
            else
                return false;
        }
        else
            return false;
    }
};